{"version":3,"file":"matrixExtendedJs-adec8503.js","sources":["../../../../../static/src/js/matrixExtended.ts"],"sourcesContent":["(function (window: any) {\n    const {Craft, Garnish, $} = window;\n    if (!Craft || !Garnish || !$) {\n        return;\n    }\n\n    /**\n     * @see https://github.com/craftcms/cms/blob/5.x/src/web/assets/matrix/src/MatrixInput.js\n     * @todo check, that it only initializes on Inline Editable views\n     */\n    Craft.MatrixExtended = Garnish.Base.extend({\n        settings: {}, childParent: {}, helper: undefined, itemDrag: undefined,\n\n        init: function (config: { settings: any, childParent: any }, helper: any) {\n            const self = this;\n            this.settings = config.settings || {};\n            this.childParent = config.childParent || {};\n            this.helper = helper;\n\n            if (!Garnish.DisclosureMenu || !Craft.MatrixInput) {\n                return;\n            }\n\n            const disclosureMenuShowFn = Garnish.DisclosureMenu.prototype.show;\n            Garnish.DisclosureMenu.prototype.show = function (...args: any[]) {\n                self.initDisclosureMenu(this);\n                disclosureMenuShowFn.apply(this, args);\n            };\n\n            const disclosureMenuInitFn = Garnish.DisclosureMenu.prototype.init;\n            Garnish.DisclosureMenu.prototype.init = function (...args: any[]) {\n                disclosureMenuInitFn.apply(this, args);\n                self.initAddButtonMenu(this);\n                self.prepareEntryDropZones();\n            };\n\n            const matrixUpdateAddEntryBtnFn = Craft.MatrixInput.prototype.updateAddEntryBtn;\n            Craft.MatrixInput.prototype.updateAddEntryBtn = function (...args: any[]) {\n                matrixUpdateAddEntryBtnFn.apply(this, args);\n                self.checkAddBtn(this);\n            };\n\n            if (!this.settings.experimentalFeatures || !this.settings.enableDragDrop) {\n                return;\n            }\n\n            const matrixInitFn = Craft.MatrixInput.prototype.init;\n            Craft.MatrixInput.prototype.init = function (...args: any[]) {\n                matrixInitFn.apply(this, args);\n                this.entrySort.allowDragging = () => false;\n                this.entrySort.destroy();\n                self.prepareEntryDropZones();\n            };\n\n            Craft.MatrixInput.prototype.canAddMoreEntries = function () {\n                return (\n                    !this.maxEntries ||\n                    this.$entriesContainer.children(':not(.matrix-extended-drop-target):not(.matrix-extended-buttons)').length < this.maxEntries\n                );\n            };\n\n            this.itemDrag = new Garnish.DragDrop({\n                activeDropTargetClass: 'active',\n                minMouseDist: 10,\n                hideDraggee: false,\n                moveHelperToCursor: true,\n                handle: (item: any) => $(item).find('> .actions > .move, > .titlebar'),\n                filter: () => this.itemDrag.$targetItem.closest('.matrixblock'),\n                dropTargets: () => {\n                    if (!this.childParent) {\n                        return [];\n                    }\n\n                    const {entry, typeId} = this.itemDrag.$draggee.closest('.matrixblock').data();\n                    const matrix = entry.matrix;\n                    if (!matrix || !typeId) {\n                        return [];\n                    }\n                    // TODO check `canAddMore`, but only if drag and drop is between fields\n                    // const $allDropTargets = $('.matrix-extended-drop-target').filter((_, x) => !!$(x).data('canAddMore'));\n                    const $allDropTargets = $('.matrix-extended-drop-target')\n                        .filter((_: any, x: any) => (this.childParent[typeId] || []).includes($(x).data('entryTypeId')));\n\n                    return $allDropTargets.toArray().reverse();\n                },\n                onDragStart: () => {\n                    Garnish.$bod.addClass('dragging');\n                    this.itemDrag.$draggee.closest('.matrixblock').addClass('draggee');\n                    this.$dropEntry = this.itemDrag.$draggee.data('entry').$container;\n                    this.$pullBlock = this.$dropEntry.closest('.matrix-field');\n                },\n                // TODO find better way, like changing the owner. Currently clone & delete is used\n                onDragStop: async () => {\n                    this.itemDrag.$draggee.closest('.matrixblock').removeClass('draggee');\n                    Garnish.$bod.removeClass('dragging');\n                    if (!this.$dropEntry || !this.$pullBlock) {\n                        return this.itemDrag.returnHelpersToDraggees();\n                    }\n                    const $dropEntry = this.$dropEntry;\n                    const $dropTarget = this.itemDrag.$activeDropTarget;\n\n                    if (!$dropEntry || !$dropTarget) {\n                        return this.itemDrag.returnHelpersToDraggees();\n                    }\n\n                    let $relationEntry;\n                    let relationPosition = 'insertBefore';\n                    if ($dropTarget.data('position') === 'button') {\n                        $relationEntry = $dropTarget.closest('.matrix-field').find('> .blocks');\n                        relationPosition = 'appendTo';\n                    } else {\n                        $relationEntry = $dropTarget.next('.matrixblock');\n                    }\n\n                    const $pullBlock = this.$pullBlock;\n                    const $dropBlock = $dropTarget.closest('.matrix-field');\n                    if ($pullBlock.is($dropBlock)) {\n                        if (relationPosition === 'appendTo') {\n                            $dropEntry.appendTo($relationEntry);\n                        } else {\n                            $dropEntry.insertBefore($relationEntry);\n                        }\n\n                        // only update one block\n                        $pullBlock.data('matrix').entrySelect.resetItemOrder();\n                    } else {\n                        const matrix = $dropBlock.data('matrix');\n                        const matrix2 = $pullBlock.data('matrix');\n                        const entry = $dropEntry.data('entry');\n                        const typeId = $dropEntry.data('typeId');\n                        await this.duplicateWithNewOwner($relationEntry, relationPosition, typeId, entry, matrix, matrix2)\n                        // matrix.entrySelect.resetItemOrder();\n                        // matrix2.entrySelect.resetItemOrder();\n                    }\n\n                    this.itemDrag.returnHelpersToDraggees();\n                    this.prepareEntryDropZones();\n                    this.$dropEntry = undefined;\n                    this.$pullBlock = undefined;\n                },\n            });\n        },\n\n        prepareEntryDropZones() {\n            if (!this.settings.experimentalFeatures || !this.settings.enableDragDrop) {\n                return;\n            }\n\n            const $fields = $('.matrix-field');\n            const $blocks = $fields.find('.matrixblock');\n\n            $('.matrix-extended-drop-target').remove();\n            for (const block of $blocks) {\n                const $block = $(block);\n\n                let $entryTypeId = null;\n                const entry = $block.data('entry');\n                if (!entry) {\n                    return;\n                }\n                const matrix = entry.matrix;\n                if (!matrix) {\n                    return;\n                }\n\n                $entryTypeId = matrix.settings.fieldId;\n\n                const $dropTargetBefore = $(`<div class=\"matrix-extended-drop-target\" data-position=\"block\"><div></div></div>`);\n                $dropTargetBefore.data($block.data());\n                $dropTargetBefore.data('entryTypeId', $entryTypeId);\n                $block.before($dropTargetBefore);\n            }\n\n            const $buttons = $fields.find('> .buttons');\n            for (const button of $buttons) {\n                const $button = $(button);\n\n                const matrix = $button.closest('.matrix-field').data('matrix');\n                if (!matrix) {\n                    continue;\n                }\n\n                const $dropTargetButton = $(`<div class=\"matrix-extended-drop-target\" data-position=\"button\"><div></div></div>`);\n                $dropTargetButton.data('entryTypeId', matrix.settings.fieldId);\n                $dropTargetButton.insertBefore($button);\n            }\n\n            this.itemDrag.removeAllItems();\n            this.itemDrag.addItems($blocks);\n            Garnish.$bod.addClass('matrix-extended-drag-drop');\n        },\n\n        initAddButtonMenu(disclosureMenu: any) {\n            if (!this.settings.expandMenu) {\n                return;\n            }\n\n            const {$trigger, $container} = disclosureMenu;\n            const $parent = $trigger.parent();\n            const $wrapper = $trigger.closest('.buttons').parent('.matrix-field');\n            if (!$trigger || !$container || !$parent.hasClass('buttons') || !$wrapper.attr('id')) {\n                return;\n            }\n\n            if ($trigger._hasMatrixExtensionButtonsInitialized) {\n                return;\n            }\n            $trigger.hide();\n            $trigger._hasMatrixExtensionButtonsInitialized = true;\n\n            const $buttonContainer = $('<div class=\"buttons matrix-extended-buttons\"></div>');\n            const $actionButtons = $trigger\n                .disclosureMenu()\n                .data('disclosureMenu')\n                .$container.find('button')\n                .clone()\n                .off()\n                .on('activate', async (ev: any) => {\n                    const $button = $container.find('button').filter((_: any, x: any) => $(x).data('type') === $(ev.currentTarget).data('type'));\n                    $button.trigger('activate');\n                });\n\n            const id = $wrapper.attr('id');\n            this.buildGroupedMenu($buttonContainer, $actionButtons, $trigger, id);\n\n            $buttonContainer.appendTo($parent);\n        },\n\n        initDisclosureMenu(disclosureMenu: any) {\n            const {$trigger, $container} = disclosureMenu;\n            if (!$trigger || !$container || !$trigger.hasClass('action-btn')) {\n                return;\n            }\n            const $element = $trigger.closest('.actions').parent('.matrixblock');\n            if (!$element.length) {\n                return;\n            }\n            const {typeId, entry} = $element.data();\n            if (!typeId || !entry) {\n                return;\n            }\n\n            const matrix = entry.matrix;\n            if (!matrix) {\n                return;\n            }\n\n            if (disclosureMenu._hasMatrixExtensionButtonsInitialized) {\n                this.checkPaste($container, matrix);\n                this.checkDuplicate($container, matrix);\n                this.checkAdd($container, matrix);\n                return;\n            }\n            disclosureMenu._hasMatrixExtensionButtonsInitialized = true;\n\n            this.addMenu($container, typeId, entry, matrix);\n        },\n\n        pasteEntry: async function (_: any, typeId: any, entry: any, matrix: any) {\n            if (matrix.addingEntry) {\n                // only one new entry at a time\n                return;\n            }\n\n            if (!matrix.canAddMoreEntries()) {\n                matrix.updateStatusMessage();\n                return;\n            }\n\n            matrix.addingEntry = true;\n\n            if (matrix.elementEditor) {\n                // First ensure we're working with drafts for all elements leading up\n                // to this field’s element\n                await matrix.elementEditor.setFormValue(matrix.settings.baseInputName, '*');\n            }\n\n            try {\n                const entryId = matrix.elementEditor.getDraftElementId(entry.id);\n\n                const {data} = await Craft.sendActionRequest('POST', 'matrix-extended/matrix-extended/paste-entry', {\n                    data: {\n                        fieldId: matrix.settings.fieldId,\n                        entryId,\n                        entryTypeId: typeId,\n                        ownerId: matrix.settings.ownerId,\n                        ownerElementType: matrix.settings.ownerElementType,\n                        siteId: matrix.settings.siteId,\n                        namespace: matrix.settings.namespace,\n                        staticEntries: matrix.settings.staticEntries,\n                    },\n                });\n\n                const $entry = $(data.blockHtml);\n\n                // Pause the element editor\n                matrix.elementEditor?.pause();\n                $entry.insertAfter(entry.$container);\n\n                matrix.trigger('entryAdded', {\n                    $entry: $entry,\n                });\n\n                $entry.css('margin-bottom', '');\n                Craft.initUiElements($entry.children('.fields'));\n                await Craft.appendHeadHtml(data.headHtml);\n                await Craft.appendBodyHtml(data.bodyHtml);\n                new Craft.MatrixInput.Entry(matrix, $entry);\n                matrix.entrySort.addItems($entry);\n                matrix.entrySelect.addItems($entry);\n                matrix.updateAddEntryBtn();\n\n                // Animate the entry into position\n                $entry.css(matrix.getHiddenEntryCss($entry)).velocity({\n                    opacity: 1, 'margin-bottom': 10,\n                }, 'fast',);\n\n                Garnish.requestAnimationFrame(function () {\n                    // Resume the element editor\n                    matrix.elementEditor?.resume();\n                });\n\n            } catch (error) {\n                this.addStatusMessage(Craft.t('matrix-extended', 'There was an error pasting the entry'), 'error');\n            }\n\n            matrix.addingEntry = false;\n            entry.actionDisclosure.hide();\n        },\n\n        duplicateWithNewOwner: async function ($relationEntry: any, relationPosition: any, typeId: any, entry: any, matrix: any, matrix2: any) {\n            if (matrix.addingEntry) {\n                // only one new entry at a time\n                return;\n            }\n\n            if (!matrix.canAddMoreEntries()) {\n                matrix.updateStatusMessage();\n                return;\n            }\n\n            matrix.addingEntry = true;\n\n            if (matrix.elementEditor) {\n                // First ensure we're working with drafts for all elements leading up\n                // to this field’s element\n                await matrix.elementEditor.setFormValue(matrix.settings.baseInputName, '*');\n            }\n\n            try {\n                const entryId = matrix.elementEditor.getDraftElementId(entry.id);\n\n                const {data} = await Craft.sendActionRequest('POST', 'matrix-extended/matrix-extended/duplicate-entry-with-new-owner', {\n                    data: {\n                        fieldId: matrix.settings.fieldId,\n                        entryId,\n                        entryTypeId: typeId,\n                        ownerId: matrix.settings.ownerId,\n                        ownerElementType: matrix.settings.ownerElementType,\n                        siteId: matrix.settings.siteId,\n                        namespace: matrix.settings.namespace,\n                        staticEntries: matrix.settings.staticEntries,\n                    },\n                });\n\n                const $entry = $(data.blockHtml);\n\n                // Pause the element editor\n                matrix.elementEditor?.pause();\n\n                if (relationPosition === 'appendTo') {\n                    $entry.appendTo($relationEntry);\n                } else {\n                    $entry.insertBefore($relationEntry);\n                }\n                entry.$container.hide();\n\n                matrix.trigger('entryAdded', {\n                    $entry: $entry,\n                });\n\n                $entry.css('margin-bottom', '');\n                Craft.initUiElements($entry.children('.fields'));\n                await Craft.appendHeadHtml(data.headHtml);\n                await Craft.appendBodyHtml(data.bodyHtml);\n                new Craft.MatrixInput.Entry(matrix, $entry);\n                matrix.entrySort.addItems($entry);\n                matrix.entrySelect.addItems($entry);\n                matrix.updateAddEntryBtn();\n\n                // Animate the entry into position\n                $entry.css(matrix.getHiddenEntryCss($entry)).velocity({\n                    opacity: 1, 'margin-bottom': 10,\n                }, 'fast',);\n\n                Garnish.requestAnimationFrame(function () {\n                    // Resume the element editor\n                    matrix.elementEditor?.resume();\n                    entry.selfDestruct();\n                });\n            } catch (error) {\n                this.addStatusMessage(Craft.t('matrix-extended', 'There was an error dropping the entry'), 'error');\n            }\n\n            matrix.addingEntry = false;\n            entry.actionDisclosure.hide();\n        },\n\n        copyEntry: async function ($menu: any, typeId: any, entry: any, matrix: any) {\n            try {\n                const entryId = matrix.elementEditor.getDraftElementId(entry.id);\n\n                const {data} = await Craft.sendActionRequest('POST', 'matrix-extended/matrix-extended/copy-entry', {\n                    data: {\n                        fieldId: matrix.settings.fieldId,\n                        entryId,\n                        entryTypeId: typeId,\n                        ownerId: matrix.settings.ownerId,\n                        ownerElementType: matrix.settings.ownerElementType,\n                        siteId: matrix.settings.siteId,\n                        namespace: matrix.settings.namespace,\n                        staticEntries: matrix.settings.staticEntries,\n                    },\n                });\n\n                this.helper.setEntryReference(data.entryReference);\n                this.checkPaste($menu, matrix);\n                this.checkDuplicate($menu, matrix);\n                this.checkAdd($menu, matrix);\n                await Craft.appendHeadHtml(data.headHtml);\n                await Craft.appendBodyHtml(data.bodyHtml);\n\n                this.addStatusMessage(Craft.t('matrix-extended', 'Entry reference copied'));\n            } catch (error) {\n                this.addStatusMessage(Craft.t('matrix-extended', 'There was an error copying the entry reference'), 'error');\n            }\n            entry.actionDisclosure.hide();\n        },\n\n        duplicateEntry: async function (_: any, typeId: any, entry: any, matrix: any) {\n            if (matrix.addingEntry) {\n                // only one new entry at a time\n                return;\n            }\n\n            if (!matrix.canAddMoreEntries()) {\n                matrix.updateStatusMessage();\n                return;\n            }\n\n            matrix.addingEntry = true;\n\n            if (matrix.elementEditor) {\n                // First ensure we're working with drafts for all elements leading up\n                // to this field’s element\n                await matrix.elementEditor.setFormValue(matrix.settings.baseInputName, '*');\n            }\n\n            const entryId = matrix.elementEditor.getDraftElementId(entry.id);\n\n            try {\n                const {data} = await Craft.sendActionRequest('POST', 'matrix-extended/matrix-extended/duplicate-entry', {\n                    data: {\n                        fieldId: matrix.settings.fieldId,\n                        entryId,\n                        entryTypeId: typeId,\n                        ownerId: matrix.settings.ownerId,\n                        ownerElementType: matrix.settings.ownerElementType,\n                        siteId: matrix.settings.siteId,\n                        namespace: matrix.settings.namespace,\n                        staticEntries: matrix.settings.staticEntries,\n                    },\n                });\n\n                const $entry = $(data.blockHtml);\n\n                // Pause the element editor\n                matrix.elementEditor?.pause();\n                $entry.insertAfter(entry.$container);\n\n                matrix.trigger('entryAdded', {\n                    $entry: $entry,\n                });\n\n                $entry.css('margin-bottom', '');\n                Craft.initUiElements($entry.children('.fields'));\n                await Craft.appendHeadHtml(data.headHtml);\n                await Craft.appendBodyHtml(data.bodyHtml);\n                new Craft.MatrixInput.Entry(matrix, $entry);\n                matrix.entrySort.addItems($entry);\n                matrix.entrySelect.addItems($entry);\n                matrix.updateAddEntryBtn();\n\n                // Animate the entry into position\n                $entry.css(matrix.getHiddenEntryCss($entry)).velocity({\n                    opacity: 1, 'margin-bottom': 10,\n                }, 'fast',);\n\n                Garnish.requestAnimationFrame(function () {\n                    // Resume the element editor\n                    matrix.elementEditor?.resume();\n                });\n            } catch (error) {\n                this.addStatusMessage(Craft.t('matrix-extended', 'There was an error duplicating the entry'), 'error');\n            }\n\n            matrix.addingEntry = false;\n            entry.actionDisclosure.hide();\n        },\n\n        addMenu: function ($container: any, typeId: any, entry: any, matrix: any) {\n            const $menu = $('<ul class=\"matrix-extended\"></ul>');\n            const $hr = $('<hr class=\"padded\">');\n\n            this.addAddBlockButton($menu, typeId, entry, matrix);\n            this.addDuplicateButton($menu, typeId, entry, matrix);\n            this.addCopyButton($menu, typeId, entry, matrix);\n            this.addPasteButton($menu, typeId, entry, matrix);\n            this.addDeleteButton($menu, entry);\n            this.checkPaste($menu, matrix);\n            this.checkDuplicate($menu, matrix);\n            this.checkAdd($menu, matrix);\n\n            $menu.insertBefore($container.find('ul').eq(0));\n            $hr.insertAfter($menu);\n\n            if (this.settings.removeEntryTypesFromDiscloseMenu) {\n                const $addButtonContainer = $container.find('[data-action=\"add\"]').parent().parent();\n                $addButtonContainer.prev().remove();\n                $addButtonContainer.remove();\n            }\n        },\n\n        addPasteButton: function ($menu: any, typeId: any, entry: any, matrix: any) {\n            if (!this.settings.enableCopyPaste) {\n                return;\n            }\n\n            const $pasteButton = $(`<li>\n            <button class=\"menu-item\" data-action=\"paste\" tabindex=\"0\"> \n                        <span class=\"icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M104.6 48H64C28.7 48 0 76.7 0 112V384c0 35.3 28.7 64 64 64h96V400H64c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H80c0 17.7 14.3 32 32 32h72.4C202 108.4 227.6 96 256 96h62c-7.1-27.6-32.2-48-62-48H215.4C211.6 20.9 188.2 0 160 0s-51.6 20.9-55.4 48zM144 56a16 16 0 1 1 32 0 16 16 0 1 1 -32 0zM448 464H256c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16l140.1 0L464 243.9V448c0 8.8-7.2 16-16 16zM256 512H448c35.3 0 64-28.7 64-64V243.9c0-12.7-5.1-24.9-14.1-33.9l-67.9-67.9c-9-9-21.2-14.1-33.9-14.1H256c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64z\"/></svg>\n                        </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Paste')}</span>\n                    </button>\n                </li>`);\n            $menu.append($pasteButton);\n\n            $pasteButton.find('button').on('click', () => {\n                this.pasteEntry($menu, typeId, entry, matrix);\n            });\n        },\n\n        addAddBlockButton: function ($menu: any, _: any, entry: any, matrix: any) {\n            if (!this.settings.enableAddBlockAbove) {\n                return;\n            }\n\n            if (!matrix.$addEntryMenuBtn.length && !matrix.$addEntryBtn.length) {\n                return;\n            }\n\n            const $addBlockButton = $(`<li>\n                    <button class=\"menu-item\" data-action=\"add-block\" tabindex=\"0\">\n                        <span class=\"icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V96c0-8.8-7.2-16-16-16H64zM0 96C0 60.7 28.7 32 64 32H384c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zM200 344V280H136c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H248v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z\"/></svg>\n                        </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Add block above')}</span>\n                    </button>\n                </li>`);\n            $menu.append($addBlockButton);\n\n            $addBlockButton.find('button').on('click', () => {\n                const id = matrix.id;\n\n                $('.matrix-extended-buttons-above').remove();\n                $(`#matrix-extended-menu-${id}-all`).remove();\n\n                const $buttonContainer = $('<div class=\"buttons matrix-extended-buttons matrix-extended-buttons-above\"></div>');\n                const $actionButtons =\n                    matrix.$addEntryMenuBtn.length\n                        ? matrix.$addEntryMenuBtn.data('disclosureMenu').$container.find('button').clone().off()\n                        : matrix.$addEntryBtn.clone().off();\n\n                const $clone = Craft.ui\n                    .createButton({\n                        label: matrix.$addEntryMenuBtn.find('.label').text(), spinner: true,\n                    })\n                    .addClass('btn menubtn dashed add icon')\n                    .attr('aria-controls', `matrix-extended-menu-${id}-all`);\n\n                const $menuContainer = $(`<div class=\"menu menu--disclosure\" id=\"matrix-extended-menu-${id}-all\">`);\n                const $menu = $('<ul></ul>');\n\n                $menuContainer.append($menu);\n                $(document.body).append($menuContainer);\n                const disclosure = new Garnish.DisclosureMenu($clone);\n\n                for (const button of $actionButtons) {\n                    const $li = $(`<li></li>`);\n                    const $button = $(button);\n                    $li.append($button)\n                    $menu.append($li);\n                }\n\n                $actionButtons.on('activate', async (ev: any) => {\n                    // only allow activation logic on \"super\" disclosure menu\n                    if (!$(ev.currentTarget).closest(`#matrix-extended-menu-${id}-all`).length) {\n                        return;\n                    }\n\n                    $clone.addClass('loading');\n\n                    try {\n                        await matrix.addEntry($(ev.currentTarget).data('type'), entry.$container[0].checkVisibility() ? entry.$container : undefined);\n                    } finally {\n                        disclosure.hide();\n                        $clone.remove();\n                        $menuContainer.remove();\n                        $buttonContainer.remove();\n                    }\n                });\n\n                if (this.settings.expandMenu) {\n                    const $container = $clone.data('disclosureMenu').$container;\n                    const $actionButtons = $container.find('button').clone(true, true);\n                    this.buildGroupedMenu($buttonContainer, $actionButtons, $clone, id, true);\n                } else {\n                    $buttonContainer.append($clone);\n                }\n\n                $buttonContainer.insertBefore(entry.$container);\n                entry.actionDisclosure.hide();\n            });\n        },\n\n        addCopyButton: function ($menu: any, typeId: any, entry: any, matrix: any) {\n            if (!this.settings.enableCopyPaste) {\n                return;\n            }\n\n            const $copyButton = $(`<li>\n                    <button class=\"menu-item\" data-action=\"copy\" tabindex=\"0\">\n                        <span class=\"icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M280 64h40c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128C0 92.7 28.7 64 64 64h40 9.6C121 27.5 153.3 0 192 0s71 27.5 78.4 64H280zM64 112c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V128c0-8.8-7.2-16-16-16H304v24c0 13.3-10.7 24-24 24H192 104c-13.3 0-24-10.7-24-24V112H64zm128-8a24 24 0 1 0 0-48 24 24 0 1 0 0 48z\"/></svg>\n                        </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Copy')}</span>\n                    </button>\n                </li>`);\n            $menu.append($copyButton);\n\n            $copyButton.find('button').on('click', () => {\n                this.copyEntry($menu, typeId, entry, matrix);\n            });\n        },\n\n        addDuplicateButton: function ($menu: any, typeId: any, entry: any, matrix: any) {\n            if (!this.settings.enableDuplicate) {\n                return;\n            }\n\n            const $duplicateButton = $(`<li>\n                <button class=\"menu-item\" data-action=\"duplicate\" tabindex=\"0\">\n                    <span class=\"icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M64 464H288c8.8 0 16-7.2 16-16V384h48v64c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h64v48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16zM224 304H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H224c-8.8 0-16 7.2-16 16V288c0 8.8 7.2 16 16 16zm-64-16V64c0-35.3 28.7-64 64-64H448c35.3 0 64 28.7 64 64V288c0 35.3-28.7 64-64 64H224c-35.3 0-64-28.7-64-64z\"/></svg>\n                    </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Duplicate')}</span>\n                </button>\n            </li>`);\n            $menu.append($duplicateButton);\n\n            $duplicateButton.find('button').on('click', () => {\n                this.duplicateEntry($menu, typeId, entry, matrix);\n            });\n        },\n\n        addDeleteButton: function ($menu: any, entry: any) {\n            if (!this.settings.extraDeleteButton) {\n                return;\n            }\n\n            const $deleteButton = $(`<li>\n                <button class=\"menu-item error\" data-action=\"delete\" tabindex=\"0\">\n                    <span class=\"icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"/></svg>\n                    </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Delete')}</span>\n                </button>\n            </li>`);\n            $menu.append($deleteButton);\n\n            $deleteButton.find('button').on('click', function () {\n                entry.selfDestruct();\n                entry.actionDisclosure.hide();\n            });\n        },\n\n        buildGroupedMenu: function ($buttonContainer: any, $actionButtons: any, $actionBtn: any, id: any, above = false) {\n            const fieldIndex: string = id.replace(/.*fields-/, '');\n            let $unused = $actionButtons;\n            if (!this.settings.fields) {\n                const $actionButtonContainer = $('<div class=\"btngroup matrix-extended-btngroup\"></div>')\n                $unused.first().addClass('add icon');\n                $unused.addClass('btn dashed');\n                $actionButtonContainer.append($unused);\n                $buttonContainer.append($actionButtonContainer)\n                return;\n            }\n\n            if (!this.settings.fields[fieldIndex]) {\n                const $actionButtonContainer = $('<div class=\"btngroup matrix-extended-btngroup\"></div>')\n                $unused.first().addClass('add icon');\n                $unused.addClass('btn dashed');\n                $actionButtonContainer.append($unused);\n                $buttonContainer.append($actionButtonContainer)\n                return;\n            }\n\n            const fieldGroup: Record<string, { groups: any, oneLiner: boolean }> = this.settings.fields[fieldIndex];\n            if (fieldGroup.oneLiner) {\n                $buttonContainer.addClass('one-line');\n            }\n            for (const [index, group] of Object.entries(fieldGroup.groups)) {\n                $(`#matrix-extended-menu-${id}-${index}${above ? '-above' : ''}`).remove();\n\n                const $groupedMenuButton = Craft.ui\n                    .createButton({\n                        label: group.label, spinner: true,\n                    })\n                    .addClass('btn menubtn dashed add icon')\n                    .attr('aria-controls', `matrix-extended-menu-${id}-${index}${above ? '-above' : ''}`)\n                    .appendTo($buttonContainer);\n                const $menuContainer = $(`<div class=\"menu menu--disclosure\" id=\"matrix-extended-menu-${id}-${index}${above ? '-above' : ''}\">`);\n                const $menu = $('<ul></ul>');\n\n                $menuContainer.append($menu);\n                $(document.body).append($menuContainer);\n                const disclosure = new Garnish.DisclosureMenu($groupedMenuButton);\n\n                for (const type of group.types) {\n                    const $li = $(`<li></li>`);\n                    const $button = $actionButtons.filter((_: any, x: any) => $(x).data('type') === type);\n                    $unused = $unused.filter((_: any, x: any) => $(x).data('type') !== type);\n                    if (!$button.length) {\n                        console.warn(`Type ${type} not found in group ${id}`)\n                        continue;\n                    }\n                    $li.append($button);\n                    $menu.append($li);\n                    $button.on('activate', () => {\n                        if (!above) {\n                            disclosure.hide();\n                            return;\n                        }\n                        $menuContainer.remove();\n                        disclosure.destroy();\n                    });\n                }\n            }\n\n            if (!$unused.length) {\n                return;\n            }\n\n            if (this.settings.expandUngrouped) {\n                const $actionButtonContainer = $('<div class=\"btngroup matrix-extended-btngroup\"></div>')\n                $unused.first().addClass('add icon');\n                $unused.addClass('btn dashed');\n                $actionButtonContainer.append($unused);\n                if (this.settings.ungroupedPosition === 'end') {\n                    $buttonContainer.append($actionButtonContainer)\n                } else {\n                    $buttonContainer.prepend($actionButtonContainer)\n                }\n                return;\n            }\n\n            $(`#matrix-extended-menu-${id}-others${above ? '-above' : ''}`).remove();\n            const $groupedMenuButton = Craft.ui\n                .createButton({\n                    label: $actionBtn.find('.label').text(), spinner: true,\n                })\n                .addClass('btn menubtn dashed add icon')\n                .attr('aria-controls', `matrix-extended-menu-${id}-others${above ? '-above' : ''}`);\n\n            if (this.settings.ungroupedPosition === 'end') {\n                $groupedMenuButton.appendTo($buttonContainer);\n            } else {\n                $groupedMenuButton.prependTo($buttonContainer);\n            }\n\n            const $menuContainer = $(`<div class=\"menu menu--disclosure\" id=\"matrix-extended-menu-${id}-others${above ? '-above' : ''}\">`);\n            const $menu = $('<ul></ul>');\n\n            $menuContainer.append($menu);\n            $(document.body).append($menuContainer);\n            const disclosure = new Garnish.DisclosureMenu($groupedMenuButton);\n\n            for (const button of $unused) {\n                const $li = $(`<li></li>`);\n                const $button = $(button);\n                $li.append($button);\n                $menu.append($li);\n                $button.on('activate', () => {\n                    if (!above) {\n                        disclosure.hide();\n                        return;\n                    }\n                    $menuContainer.remove();\n                    disclosure.destroy();\n                })\n            }\n        },\n\n        checkAdd: function ($container: any, matrix: any) {\n            const $addButton = $container.find('button[data-action=\"add-block\"]');\n            $addButton.disable();\n            const $parent = $addButton.parent();\n            $parent.attr('title', '');\n\n            if (!matrix.canAddMoreEntries()) {\n                $parent.attr('title', Craft.t('matrix-extended', 'No more entries can be added.'));\n                return;\n            }\n\n            $addButton.enable();\n        },\n\n        checkAddBtn: function (matrix: any) {\n            if (!this.settings.expandMenu) {\n                return;\n            }\n\n            const $btns = matrix.$container.find('> .blocks > .matrix-extended-buttons, > .buttons > .matrix-extended-buttons').find('button');\n            $btns.disable();\n            const $parent = $btns.parent();\n            $parent.attr('title', '');\n\n            if (!matrix.canAddMoreEntries()) {\n                $parent.attr('title', Craft.t('matrix-extended', 'No more entries can be added.'));\n                return;\n            }\n\n            $btns.enable();\n        },\n\n        checkDuplicate: function ($container: any, matrix: any) {\n            const $duplicateButton = $container.find('button[data-action=\"duplicate\"]');\n            $duplicateButton.disable();\n            const $parent = $duplicateButton.parent();\n            $parent.attr('title', '');\n\n            if (!matrix.canAddMoreEntries()) {\n                $parent.attr('title', Craft.t('matrix-extended', 'No more entries can be added.'));\n                return;\n            }\n\n            $duplicateButton.enable();\n        },\n\n        checkPaste: function ($container: any, matrix: any) {\n            const $pasteButton = $container.find('button[data-action=\"paste\"]');\n            $pasteButton.disable();\n            const $parent = $pasteButton.parent();\n            $parent.attr('title', '');\n\n            if (!this.helper.getEntryReference() || !this.helper.getEntryReference().entryTypeId) {\n                $parent.attr('title', Craft.t('matrix-extended', 'There is nothing to paste.'));\n                return;\n            }\n\n            if (!matrix.canAddMoreEntries()) {\n                $parent.attr('title', Craft.t('matrix-extended', 'No more entries can be added.'));\n                return;\n            }\n\n            if (!this.helper.isEntryReferenceAllowed(matrix.settings.fieldId)) {\n                $parent.attr('title', Craft.t('matrix-extended', 'The copied entry is not allowed here.'));\n                return;\n            }\n\n            $pasteButton.enable();\n        },\n\n        addStatusMessage: function (message: string, type: 'notice' | 'error' = 'notice') {\n            if (type === 'notice') {\n                Craft.cp.displayNotice(message);\n            }\n\n            if (type === 'error') {\n                Craft.cp.displayError(message);\n            }\n        }\n    });\n})(window);\n"],"names":["window","Craft","Garnish","$","config","helper","self","disclosureMenuShowFn","args","disclosureMenuInitFn","matrixUpdateAddEntryBtnFn","matrixInitFn","item","entry","typeId","_","x","$dropEntry","$dropTarget","$relationEntry","relationPosition","$pullBlock","$dropBlock","matrix","matrix2","$fields","$blocks","block","$block","$entryTypeId","$dropTargetBefore","$buttons","button","$button","$dropTargetButton","disclosureMenu","$trigger","$container","$parent","$wrapper","$buttonContainer","$actionButtons","ev","id","$element","_a","entryId","data","$entry","$menu","$hr","$addButtonContainer","$pasteButton","$addBlockButton","$clone","$menuContainer","disclosure","$li","$copyButton","$duplicateButton","$deleteButton","$actionBtn","above","fieldIndex","$unused","$actionButtonContainer","fieldGroup","index","group","$groupedMenuButton","type","$addButton","$btns","message"],"mappings":"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"}