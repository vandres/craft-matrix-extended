{"version":3,"file":"nestedElementExtendedJs-6d4f2d74.js","sources":["../../../../../static/src/js/nestedElementExtended.ts"],"sourcesContent":["(function (window: any) {\n    const {Craft, Garnish, $} = window;\n    if (!Craft || !Garnish || !$) {\n        return;\n    }\n\n    /**\n     * @see https://github.com/craftcms/cms/blob/5.x/src/web/assets/cp/src/js/NestedElementManager.js\n     */\n    Craft.NestedElementExtended = Garnish.Base.extend({\n        settings: {}, childParent: {}, helper: undefined,\n\n        init: function (config: { settings: any, childParent: any}, helper: any) {\n            const self = this;\n\n            this.settings = config.settings || {};\n            this.childParent = config.childParent || {};\n            this.helper = helper;\n\n            if (!Garnish.DisclosureMenu || !Craft.NestedElementManager) {\n                return;\n            }\n\n            const nestedInitFn = Craft.NestedElementManager.prototype.init;\n            Craft.NestedElementManager.prototype.init = function (...args: any[]) {\n                nestedInitFn.apply(this, args);\n            };\n\n            const disclosureMenuShowFn = Garnish.DisclosureMenu.prototype.show;\n            Garnish.DisclosureMenu.prototype.show = function (...args: any[]) {\n                self.initDisclosureMenu(this);\n                disclosureMenuShowFn.apply(this, args);\n            };\n        },\n\n        initDisclosureMenu(disclosureMenu: any) {\n            if (!this.settings.experimentalFeatures) {\n                return;\n            }\n\n            const {$trigger, $container} = disclosureMenu;\n            if (!$trigger || !$container || !$trigger.hasClass('action-btn')) {\n                return;\n            }\n\n            const $element = $trigger.closest('.card-actions').parent('.card-actions-container').parent('.card');\n            if (!$element.length) {\n                return;\n            }\n\n            const {typeId, id} = $element.data();\n            if (!typeId || !id) {\n                return;\n            }\n\n            const $parent = $element.closest('.nested-element-cards');\n            const nem = $parent.data('nestedElementManager');\n            if (!nem) {\n                return;\n            }\n\n            if (nem.settings.mode !== 'cards' || !nem.settings.canCreate) {\n                return;\n            }\n\n            if (disclosureMenu._hasNestedElementExtensionButtonsInitialized) {\n                this.checkPaste($container, $element, nem);\n                this.checkDuplicate($container, nem);\n                // this.checkAdd($container, matrix);\n                return;\n            }\n            disclosureMenu._hasNestedElementExtensionButtonsInitialized = true;\n\n            this.addMenu($container, typeId, $element, nem);\n        },\n\n        addMenu: function ($container: any, typeId: any, $element: any, nem: any) {\n            const $menu = $('<ul class=\"matrix-extended\"></ul>');\n            const $hr = $('<hr class=\"padded\">');\n\n            // this.addAddBlockButton($menu, typeId, entry, matrix);\n            this.addDuplicateButton($container, $menu, typeId, $element, nem);\n            this.addCopyButton($container, $menu, typeId, $element, nem);\n            this.addPasteButton($container, $menu, typeId, $element, nem);\n\n            $menu.insertBefore($container.find('ul').eq(0));\n            $hr.insertAfter($menu);\n\n            this.checkPaste($container, $element, nem);\n            this.checkDuplicate($container, nem);\n            // this.checkAdd($container, nem);\n        },\n\n        addDuplicateButton: function ($container: any, $menu: any, typeId: any, $element: any, nem: any) {\n            const $duplicateButton = $(`<li>\n                <button class=\"menu-item\" data-action=\"duplicate\" tabindex=\"0\">\n                    <span class=\"icon\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M64 464H288c8.8 0 16-7.2 16-16V384h48v64c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h64v48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16zM224 304H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H224c-8.8 0-16 7.2-16 16V288c0 8.8 7.2 16 16 16zm-64-16V64c0-35.3 28.7-64 64-64H448c35.3 0 64 28.7 64 64V288c0 35.3-28.7 64-64 64H224c-35.3 0-64-28.7-64-64z\"/></svg>\n                    </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Duplicate')}</span>\n                </button>\n            </li>`);\n            $menu.append($duplicateButton);\n\n            $duplicateButton.find('button').on('click', () => {\n                this.duplicateEntry($container, $menu, typeId, $element, nem);\n            });\n        },\n\n        duplicateEntry: async function ($container: any, $menu: any, typeId: any, $element: any, nem: any) {\n            if (!nem.canCreate()) {\n                return;\n            }\n\n            try {\n                await nem.markAsDirty();\n\n                const {data} = await Craft.sendActionRequest('POST', 'matrix-extended/nested-element-extended/duplicate-entry', {\n                    data: {\n                        fieldId: $element.data().fieldId,\n                        entryId: $element.data().id,\n                        entryTypeId: typeId,\n                        ownerId: nem.settings.ownerId,\n                        ownerElementType: nem.settings.ownerElementType,\n                        siteId: nem.settings.ownerSiteId,\n                    },\n                });\n\n                await this.addElementCard(data, nem, $element.data('id'));\n            } catch (error) {\n                this.addStatusMessage(Craft.t('matrix-extended', 'There was an error duplicating the entry'), 'error');\n            }\n\n            $container.data('disclosureMenu').hide();\n        },\n\n        checkDuplicate: function ($container: any, nem: any) {\n            const $duplicateButton = $container.find('button[data-action=\"duplicate\"]');\n            $duplicateButton.disable();\n            const $parent = $duplicateButton.parent();\n            $parent.attr('title', '');\n\n            if (!nem.canCreate()) {\n                $parent.attr('title', Craft.t('matrix-extended', 'No more entries can be added.'));\n                return;\n            }\n\n            $duplicateButton.enable();\n        },\n\n        addCopyButton: function ($container: any, $menu: any, typeId: any, $element: any, nem: any) {\n            const $copyButton = $(`<li>\n                    <button class=\"menu-item\" data-action=\"copy\" tabindex=\"0\">\n                        <span class=\"icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M280 64h40c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128C0 92.7 28.7 64 64 64h40 9.6C121 27.5 153.3 0 192 0s71 27.5 78.4 64H280zM64 112c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V128c0-8.8-7.2-16-16-16H304v24c0 13.3-10.7 24-24 24H192 104c-13.3 0-24-10.7-24-24V112H64zm128-8a24 24 0 1 0 0-48 24 24 0 1 0 0 48z\"/></svg>\n                        </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Copy')}</span>\n                    </button>\n                </li>`);\n            $menu.append($copyButton);\n\n            $copyButton.find('button').on('click', () => {\n                this.copyEntry($container, $menu, typeId, $element, nem);\n            });\n        },\n\n        copyEntry: async function ($container: any, $menu: any, typeId: any, $element: any, nem: any) {\n            try {\n                const {data} = await Craft.sendActionRequest('POST', 'matrix-extended/nested-element-extended/copy-entry', {\n                    data: {\n                        fieldId: $element.data().fieldId,\n                        entryId: $element.data().id,\n                        entryTypeId: typeId,\n                        ownerId: nem.settings.ownerId,\n                        ownerElementType: nem.settings.ownerElementType,\n                        siteId: nem.settings.ownerSiteId,\n                    },\n                });\n\n                this.helper.setEntryReference(data.entryReference);\n                this.checkPaste($container, $element, nem);\n                this.checkDuplicate($container, nem);\n                // this.checkAdd($container, nem);\n                await Craft.appendHeadHtml(data.headHtml);\n                await Craft.appendBodyHtml(data.bodyHtml);\n\n                this.addStatusMessage(Craft.t('matrix-extended', 'Entry reference copied'));\n            } catch (error) {\n                this.addStatusMessage(Craft.t('matrix-extended', 'There was an error copying the entry reference'), 'error');\n            }\n            $container.data('disclosureMenu').hide();\n        },\n\n        addPasteButton: function ($container: any, $menu: any, typeId: any, $element: any, nem: any) {\n            const $pasteButton = $(`<li>\n            <button class=\"menu-item\" data-action=\"paste\" tabindex=\"0\"> \n                        <span class=\"icon\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d=\"M104.6 48H64C28.7 48 0 76.7 0 112V384c0 35.3 28.7 64 64 64h96V400H64c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H80c0 17.7 14.3 32 32 32h72.4C202 108.4 227.6 96 256 96h62c-7.1-27.6-32.2-48-62-48H215.4C211.6 20.9 188.2 0 160 0s-51.6 20.9-55.4 48zM144 56a16 16 0 1 1 32 0 16 16 0 1 1 -32 0zM448 464H256c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16l140.1 0L464 243.9V448c0 8.8-7.2 16-16 16zM256 512H448c35.3 0 64-28.7 64-64V243.9c0-12.7-5.1-24.9-14.1-33.9l-67.9-67.9c-9-9-21.2-14.1-33.9-14.1H256c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64z\"/></svg>\n                        </span><span class=\"menu-item-label\">${Craft.t('matrix-extended', 'Paste')}</span>\n                    </button>\n                </li>`);\n            $menu.append($pasteButton);\n\n            $pasteButton.find('button').on('click', () => {\n                this.pasteEntry($container, $menu, typeId, $element, nem);\n            });\n        },\n\n        checkPaste: function ($container: any, $element: any, nem: any) {\n            const $pasteButton = $container.find('button[data-action=\"paste\"]');\n            $pasteButton.disable();\n            const $parent = $pasteButton.parent();\n            $parent.attr('title', '');\n\n            if (!this.helper.getEntryReference() || !this.helper.getEntryReference().entryTypeId) {\n                $parent.attr('title', Craft.t('matrix-extended', 'There is nothing to paste.'));\n                return;\n            }\n\n            if (!nem.canCreate()) {\n                $parent.attr('title', Craft.t('matrix-extended', 'No more entries can be added.'));\n                return;\n            }\n\n            if (!this.helper.isEntryReferenceAllowed($element.data().fieldId)) {\n                $parent.attr('title', Craft.t('matrix-extended', 'The copied entry is not allowed here.'));\n                return;\n            }\n\n            $pasteButton.enable();\n        },\n\n        pasteEntry: async function ($container: any, $menu: any, typeId: any, $element: any, nem: any) {\n            if (!nem.canCreate()) {\n                return;\n            }\n\n            try {\n                await nem.markAsDirty();\n\n                const {data} = await Craft.sendActionRequest('POST', 'matrix-extended/nested-element-extended/paste-entry', {\n                    data: {\n                        fieldId: $element.data().fieldId,\n                        entryId: $element.data().id,\n                        entryTypeId: typeId,\n                        ownerId: nem.settings.ownerId,\n                        ownerElementType: nem.settings.ownerElementType,\n                        siteId: nem.settings.ownerSiteId,\n                    },\n                });\n\n                await this.addElementCard(data, nem, $element.data('id'));\n            } catch (error) {\n                this.addStatusMessage(Craft.t('matrix-extended', 'There was an error pasting the entry'), 'error');\n            }\n\n            $container.data('disclosureMenu').hide();\n        },\n\n        /**\n         * Copy of original method, to allow custom position in the DOM\n         *\n         * @see NestedElementManager.addElementCard(element)\n         */\n        async addElementCard(element: any, nem: any, insertAfter: number) {\n            if (nem.$createBtn) {\n                nem.$createBtn.addClass('loading');\n            }\n\n            let response;\n            try {\n                response = await Craft.sendActionRequest(\n                    'POST',\n                    'app/render-elements',\n                    {\n                        data: {\n                            elements: [\n                                {\n                                    type: nem.elementType,\n                                    id: element.id,\n                                    ownerId: nem.settings.ownerId,\n                                    siteId: element.siteId,\n                                    instances: [\n                                        {\n                                            context: 'field',\n                                            ui: 'card',\n                                            sortable: nem.settings.sortable,\n                                            showActionMenu: true,\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                    }\n                );\n            } catch (e: any) {\n                Craft.cp.displayError(e?.response?.data?.message);\n                throw e?.response?.data?.message ?? e;\n            } finally {\n                if (nem.$createBtn) {\n                    nem.$createBtn.removeClass('loading');\n                }\n            }\n\n            if (!nem.$elements) {\n                nem.initCards();\n            }\n\n            const $li = $('<li/>');\n            const $card = $(response.data.elements[element.id][0]).appendTo($li);\n            nem.$elements.find(`[data-id=\"${insertAfter}\"`).parent().after($li);\n            nem.initElement($card);\n            await Craft.appendHeadHtml(response.data.headHtml);\n            await Craft.appendBodyHtml(response.data.bodyHtml);\n            Craft.cp.elementThumbLoader.load($card);\n            nem.updateCreateBtn();\n\n            return $card;\n        },\n\n        addStatusMessage: function (message: string, type: 'notice' | 'error' = 'notice') {\n            if (type === 'notice') {\n                Craft.cp.displayNotice(message);\n            }\n\n            if (type === 'error') {\n                Craft.cp.displayError(message);\n            }\n        }\n    });\n})(window);\n"],"names":["window","Craft","Garnish","$","config","helper","self","nestedInitFn","args","disclosureMenuShowFn","disclosureMenu","$trigger","$container","$element","typeId","id","nem","$menu","$hr","$duplicateButton","data","$parent","$copyButton","$pasteButton","element","insertAfter","_a","_b","_c","_d","response","e","$li","$card","message","type"],"mappings":"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"}